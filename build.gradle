plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.15"
}

group = 'org.training'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'

    testImplementation 'io.cucumber:cucumber-java:4.7.4'
    testImplementation 'io.cucumber:cucumber-junit:4.7.4'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.3.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.3.0")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.3.0")
}

test {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath += configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output

            args = ['--plugin', 'html:build/cucumber','--plugin', 'json:build/cucumber/cucumber-report.json','--plugin', 'pretty', '--glue', 'org.training.pos', 'src/test/resources']
            if(project.hasProperty('cucumberOptions')){
                def cucumberCustomArgs = cucumberOptions.split(',')
                args = [args, cucumberCustomArgs].flatten()
            }
        }
    }
}

cucumberReports {
    outputDir = file('build/cucumber/html')
    buildId = '0'
    reports = files('build/cucumber/cucumber-report.json')
}

generateCucumberReports.dependsOn cucumber
